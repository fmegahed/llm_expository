# This R file is used to assess whether the code generated by ChatGPT can be used.



# * Question 1 ------------------------------------------------------------


# * * Prompt --------------------------------------------------------------

# I have a datafile called 'data.csv'. It contains four columns of data and 20 rows.  
# Each row contains a subgroup.  
# Can you write R code to monitor the mean of each subgroup with a Shewhart control chart? 



# * * ChatGPT Answer ------------------------------------------------------

# Load the qcc package
library(qcc)

# Read in the data from the csv file
data <- read.csv("data.csv")

# Create a Shewhart control chart for the mean of each subgroup
qcc(data, type = "xbar.one", chart = "Shewhart", subgroup.size = 4)



# * * Our Evaluation ------------------------------------------------------

# Step 1 Creating the dataset since we did not have one that we input it.

data('pistonrings', package = 'qcc')

# we modified and transformed this dataset into the shape defined in the question
data <- pistonrings |> # dataset
  dplyr::select(c(diameter, sample)) |> # dropping the trial column 
  dplyr::rename(subgroup = sample) |> # renaming the name to subgroup
  dplyr::group_by(subgroup) |> # grouping by sample so we can create a column that counts obs in a subgroup
  dplyr::mutate(obs = dplyr::row_number()) |> # creating the obs within the subgroup
  tidyr::pivot_wider(values_from = 'diameter', names_from = 'obs') |> # making this dataset wide
  dplyr::ungroup() |> # ungroup so we can drop the subgroup variable (now it is your row number)
  dplyr::select(-c(subgroup, `5`)) |> # dropping the subgroup variable and the fifth obs since our question indicated 4 samples
  dplyr::slice_head(n = 20) # keeping only 20 subgroups to make it similar to the question

colnames(data) = paste('obs', colnames(data), sep = '_' ) # changing column names so they are not numeric

# creating the data file from a modified dataset from the qcc pkg
# we used this dataset since it fits our description (when modified) and it is from
# the package that ChatGPT suggested
readr::write_csv(x = data, file = 'data.csv') 


# * * Testing the ChatGPT Code --------------------------------------------

# Load the qcc package
library(qcc) # works

# Read in the data from the csv file
data <- read.csv("data.csv") # works

# Create a Shewhart control chart for the mean of each subgroup
qcc(data, type = "xbar.one", chart = "Shewhart", subgroup.size = 4)
# produces the error below
# "Error in if (chart.all) { : argument is not interpretable as logical"



# * * Modifying ChatGPT's Answer ------------------------------------------

# this produces a chart but it is clearly the incorrect one
qcc(data, type = "xbar.one", chart = TRUE, subgroup.size = 4)


# a minimal change to the above code, would result in an acceptable answer
qcc(data, type = "xbar", chart = TRUE, subgroup.size = 4) # this now works





# * Question 2 ------------------------------------------------------------



# * * Prompt --------------------------------------------------------------


# Can you use another approach in R besides 'qcc'.



# *ChatGPT Answer ---------------------------------------------------------

# Load the ggplot2 and dplyr packages
library(ggplot2)
library(dplyr)

# Read in the data from the csv file
data <- read.csv("data.csv")

# Calculate the mean for each subgroup
data_means <- data %>%
  group_by(group = ceiling(row_number()/4)) %>%
  summarize(mean = mean(value))

# Create a Shewhart control chart for the mean of each subgroup
ggplot(data_means, aes(x = group, y = mean)) +
  geom_point() +
  geom_hline(yintercept = mean(data_means$mean), color = "red", linetype = "dashed") +
  geom_errorbar(aes(ymin = mean - 2 * sd(data$value), ymax = mean + 2 * sd(data$value)), width = 0.1) +
  labs(x = "Subgroup", y = "Mean") +
  ggtitle("Shewhart Control Chart for the Mean of Each Subgroup")



# * Our Fixing of the Code ------------------------------------------------

# Load the ggplot2 and dplyr packages
library(ggplot2)
library(dplyr)

# Read in the data from the csv file
data <- read.csv("data.csv")

# Calculate the mean for each subgroup
data_means <- data |>
  group_by(group = row_number()) |> 
  mutate(
    avg = mean( c(obs_1, obs_2, obs_3, obs_4) ),
    R = max(c(obs_1, obs_2, obs_3, obs_4)) - min(c(obs_1, obs_2, obs_3, obs_4))
  ) |> 
  ungroup()

# We do not recommend the use of ranges to estimate the standard deviation
# but we have used this approach here to reproduce the output from the qcc plot
# The 0.729 value is the control limit factor for x-bar when subgroup size (n=4) 
ggplot(data_means, aes(x = group, y = avg)) +
  geom_point(size = 2) +
  geom_line(size = 1) +
  geom_hline(yintercept = mean(data_means$avg), linetype = "solid") +
  geom_hline(yintercept = mean(data_means$avg) + 0.729*mean(data_means$R), linetype = "dashed") +
  geom_hline(yintercept = mean(data_means$avg) - 0.729*mean(data_means$R), linetype = "dashed") +
  labs(x = "Subgroup", y = "Mean") +
  ggtitle("xbar Chart for data")

ggsave(filename = 'figs/gg_xbar.pdf', width = 6, height = 2)
